plugins {
    id "com.diffplug.eclipse.apt" version "3.22.0"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "application"
}

version "0.1"
group "com.dataart.microapp"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jcenter.bintray.com" }
    mavenLocal()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}
//
dependencies {

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.data:micronaut-data-processor"
    annotationProcessor "io.micronaut.jaxrs:micronaut-jaxrs-processor:$micronautJaxRsVersion"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"


    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut.jaxrs:micronaut-jaxrs-server:$micronautJaxRsVersion"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    compileOnly("org.graalvm.nativeimage:svm")
    runtimeOnly("ch.qos.logback:logback-classic")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


test.classpath += configurations.developmentOnly

mainClassName = "com.dataart.microapp.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

